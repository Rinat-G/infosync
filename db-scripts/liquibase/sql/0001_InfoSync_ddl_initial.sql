--liquibase formatted sql

--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
--precondition-sql-check expectedresult:0 select count(*) from pg_tables where  schemaname = 'infosync'
create schema infosync;

--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
--precondition-sql-check expectedresult:0 select count(*) from pg_tables where  schemaname = 'infosync' and tablename  = 'group'
create table ifs_group
(
    id   bigint generated by default as identity,
    name varchar(100) not null,
    constraint group_pk primary key (id),
    constraint group_name_u unique (name)
);

--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
create table ifs_user
(
    id         bigint generated by default as identity,
    first_name varchar      not null,
    last_name  varchar      not null,
    patronymic varchar,
    email      varchar      not null,
    group_id   bigint,
    type       varchar(100) not null default 'student',
    salt       varchar      not null,
    pass_hash  varchar      not null,
    constraint user_pk primary key (id),
    constraint user_group_id_fk foreign key (group_id) references ifs_group (id) on delete set null,
    constraint user_full_name_group_u unique (first_name, last_name, patronymic, group_id)
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
create table ifs_post
(
    id                     bigint generated by default as identity,
    title                  varchar not null,
    post_link              varchar not null,
    post_body              varchar not null,
    group_id               bigint  not null,
    recommended_by_user_id bigint  not null,
    constraint post_pk primary key (id),
    constraint post_group_id_fk foreign key (group_id) references ifs_group (id),
    constraint post_recommended_by_user_id_fk foreign key (recommended_by_user_id) references ifs_user (id) on delete set null
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
create table ifs_essay
(
    id        bigint generated by default as identity,
    post_id   bigint  not null,
    author_id bigint  not null,
    text      varchar not null,
    constraint essay_pk primary key (id),
    constraint essay_post_id_fk foreign key (post_id) references ifs_post (id) on delete cascade,
    constraint essay_author_id_fk foreign key (author_id) references ifs_user (id) on delete set null,
    constraint essay_post_author_u unique (post_id, author_id)
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
create table ifs_post_status
(
    user_id bigint not null,
    post_id bigint not null,
    readed  bool   not null default false,
    constraint post_status_pk primary key (user_id, post_id),
    constraint post_status_user_id_fk foreign key (user_id) references ifs_user (id) on delete cascade,
    constraint post_status_post_id_fk foreign key (post_id) references ifs_post (id) on delete cascade
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
create table ifs_rating
(
    id              bigint generated by default as identity,
    essay_id        bigint not null,
    mark            int    not null,
    mark_by_user_id bigint not null,
    constraint rating_pk primary key (id),
    constraint rating_essay_id_fk foreign key (essay_id) references ifs_essay (id) on delete cascade,
    constraint rating_mark_by_user_id_fk foreign key (mark_by_user_id) references ifs_user (id) on delete set null,
    constraint rating_essay_mark_by_u unique (essay_id, mark_by_user_id)
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runonchange:true failonerror:true
create table ifs_comment
(
    id        bigint generated by default as identity,
    essay_id  bigint  not null,
    author_id bigint  not null,
    text      varchar not null,
    constraint comment_pk primary key (id),
    constraint comment_essay_id_fk foreign key (essay_id) references ifs_essay (id) on delete cascade,
    constraint comment_author_id_fk foreign key (author_id) references ifs_user (id) on delete set null
);

