--liquibase formatted sql

--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
--precondition-sql-check expectedResult:0 SELECT COUNT(*) FROM pg_tables WHERE  schemaname = 'INFOSYNC'
CREATE SCHEMA "INFOSYNC";

--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
--precondition-sql-check expectedResult:0 SELECT COUNT(*) FROM pg_tables WHERE  schemaname = 'INFOSYNC' AND tablename  = 'GROUP'
CREATE TABLE "GROUP"
(
    "ID"   BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "NAME" VARCHAR(100) NOT NULL,
    CONSTRAINT "GROUP_PK" PRIMARY KEY ("ID"),
    CONSTRAINT "GROUP_NAME_U" UNIQUE ("NAME")
);

--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
CREATE TABLE "USER"
(
    "ID"         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "FIRST_NAME" VARCHAR      NOT NULL,
    "LAST_NAME"  VARCHAR      NOT NULL,
    "PATRONYMIC" VARCHAR,
    "EMAIL"      VARCHAR      NOT NULL,
    "GROUP_ID"   BIGINT,
    "TYPE"       VARCHAR(100) NOT NULL DEFAULT 'STUDENT',
    "SALT"       VARCHAR      NOT NULL,
    "PASS_HASH"  VARCHAR      NOT NULL,
    CONSTRAINT "USER_PK" PRIMARY KEY ("ID"),
    CONSTRAINT "USER_GROUP_ID_FK" FOREIGN KEY ("GROUP_ID") REFERENCES "GROUP" ("ID") ON DELETE SET NULL,
    CONSTRAINT "USER_FULL_NAME_GROUP_U" UNIQUE ("FIRST_NAME", "LAST_NAME", "PATRONYMIC", "GROUP_ID")
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
CREATE TABLE "POST"
(
    "ID"                     BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "TITLE"                  VARCHAR NOT NULL,
    "POST_LINK"              VARCHAR NOT NULL,
    "POST_BODY"              VARCHAR NOT NULL,
    "GROUP_ID"               BIGINT  NOT NULL,
    "RECOMMENDED_BY_USER_ID" BIGINT  NOT NULL,
    CONSTRAINT "POST_PK" PRIMARY KEY ("ID"),
    CONSTRAINT "POST_GROUP_ID_FK" FOREIGN KEY ("GROUP_ID") REFERENCES "GROUP" ("ID"),
    CONSTRAINT "POST_RECOMMENDED_BY_USER_ID_FK" FOREIGN KEY ("RECOMMENDED_BY_USER_ID") REFERENCES "USER" ("ID") ON DELETE SET NULL
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
CREATE TABLE "ESSAY"
(
    "ID"        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "POST_ID"   BIGINT  NOT NULL,
    "AUTHOR_ID" BIGINT  NOT NULL,
    "TEXT"      VARCHAR NOT NULL,
    CONSTRAINT "ESSAY_PK" PRIMARY KEY ("ID"),
    CONSTRAINT "ESSAY_POST_ID_FK" FOREIGN KEY ("POST_ID") REFERENCES "POST" ("ID") ON DELETE CASCADE,
    CONSTRAINT "ESSAY_AUTHOR_ID_FK" FOREIGN KEY ("AUTHOR_ID") REFERENCES "USER" ("ID") ON DELETE SET NULL,
    CONSTRAINT "ESSAY_POST_AUTHOR_U" UNIQUE ("POST_ID", "AUTHOR_ID")
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
CREATE TABLE "POST_STATUS"
(
    "USER_ID" BIGINT NOT NULL,
    "POST_ID" BIGINT NOT NULL,
    "READED"  BOOL   NOT NULL DEFAULT FALSE,
    CONSTRAINT "POST_STATUS_PK" PRIMARY KEY ("USER_ID", "POST_ID"),
    CONSTRAINT "POST_STATUS_USER_ID_FK" FOREIGN KEY ("USER_ID") REFERENCES "USER" ("ID") ON DELETE CASCADE,
    CONSTRAINT "POST_STATUS_POST_ID_FK" FOREIGN KEY ("POST_ID") REFERENCES "POST" ("ID") ON DELETE CASCADE
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
CREATE TABLE "RATING"
(
    "ID"              BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "ESSAY_ID"        BIGINT NOT NULL,
    "MARK"            INT    NOT NULL,
    "MARK_BY_USER_ID" BIGINT NOT NULL,
    CONSTRAINT "RATING_PK" PRIMARY KEY ("ID"),
    CONSTRAINT "RATING_ESSAY_ID_FK" FOREIGN KEY ("ESSAY_ID") REFERENCES "ESSAY" ("ID") ON DELETE CASCADE,
    CONSTRAINT "RATING_MARK_BY_USER_ID_FK" FOREIGN KEY ("MARK_BY_USER_ID") REFERENCES "USER" ("ID") ON DELETE SET NULL,
    CONSTRAINT "RATING_ESSAY_MARK_BY_U" UNIQUE ("ESSAY_ID", "MARK_BY_USER_ID")
);


--changeset gimaletdinov-rr:infosync_ddl_initial_001 runOnChange:true failOnError:true
CREATE TABLE "COMMENT"
(
    "ID"        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    "ESSAY_ID"  BIGINT  NOT NULL,
    "AUTHOR_ID" BIGINT  NOT NULL,
    "TEXT"      VARCHAR NOT NULL,
    CONSTRAINT "COMMENT_PK" PRIMARY KEY ("ID"),
    CONSTRAINT "COMMENT_ESSAY_ID_FK" FOREIGN KEY ("ESSAY_ID") REFERENCES "ESSAY" ("ID") ON DELETE CASCADE,
    CONSTRAINT "COMMENT_AUTHOR_ID_FK" FOREIGN KEY ("AUTHOR_ID") REFERENCES "USER" ("ID") ON DELETE SET NULL
);

